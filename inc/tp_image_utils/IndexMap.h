#ifndef tp_image_utils_IndexMap_h
#define tp_image_utils_IndexMap_h

#include "tp_image_utils/Globals.h"

#include <vector>

namespace tp_image_utils
{

//##################################################################################################
class TP_IMAGE_UTILS_EXPORT IndexMap
{
public:
  //################################################################################################
  IndexMap(size_t w=0, size_t h=0);

  //################################################################################################
  void fill(uint32_t value);

  //################################################################################################
  const uint32_t* constData() const;

  //################################################################################################
  uint32_t* data();

  //################################################################################################
  size_t width() const;

  //################################################################################################
  size_t height() const;

  //################################################################################################
  size_t size() const;

  //################################################################################################
  void setPixel(size_t x, size_t y, uint32_t value);

  //################################################################################################
  uint32_t pixel(size_t x, size_t y, uint32_t defaultValue=0) const;

  //################################################################################################
  IndexMap subImage(size_t left, size_t top, size_t right, size_t bottom) const;

  //################################################################################################
  //! Rotate the image 90 degrees clockwise
  IndexMap rotate90CW() const;

  //################################################################################################
  //! Rotate the image 90 degrees counter clockwise
  IndexMap rotate90CCW() const;

  //################################################################################################
  std::vector<uint32_t> extractRow(size_t y) const;

  //################################################################################################
  std::vector<uint32_t> extractColumn(size_t x) const;

  //################################################################################################
  void setRow(size_t y, const std::vector<uint32_t>& values);

  //################################################################################################
  void setColumn(size_t x, const std::vector<uint32_t>& values);

  //################################################################################################
  //! Simply sets the sise of the image, does NOT scale the contents
  void setSize(size_t width, size_t height);

private:
  std::vector<uint32_t> m_data;
  size_t m_width;
  size_t m_height;
};
}

#endif
